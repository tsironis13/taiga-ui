name: ⚙️ Playwright E2E testing
on:
  push:
    branches: [never]

jobs:
  build-demo:
    if: ${{ !contains(github.head_ref , 'release/') }}
    name: Build demo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 10
      - uses: taiga-family/ci/actions/setup/variables@v1.91.0
      - uses: taiga-family/ci/actions/run/rebase@v1.91.0
        continue-on-error: true
      - uses: taiga-family/ci/actions/setup/node@v1.91.0

      - name: Building demo-app of git-branch without cache
        run: npx nx build demo

      - name: Upload cache / ${{ env.CACHE_DIST_KEY }}
        uses: actions/cache/save@v4.0.2
        with:
          path: dist/demo
          key: ${{ env.CACHE_DIST_KEY }}

  playwright:
    if: ${{ !contains(github.head_ref , 'release/') }}
    runs-on: ubuntu-latest
    needs: [build-demo]
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9]
        shardTotal: [9]
    name: playwright / (${{ matrix.shardIndex }} of ${{ matrix.shardTotal }})
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: taiga-family/ci/actions/setup/variables@v1.91.0
      - uses: taiga-family/ci/actions/setup/node@v1.91.0
      - uses: taiga-family/ci/actions/setup/playwright@v1.91.0

      - name: Download cache / ${{ env.CACHE_DIST_KEY }}
        uses: actions/cache/restore@v4.0.2
        with:
          path: dist/demo
          key: ${{ env.CACHE_DIST_KEY }}

      - uses: taiga-family/ci/actions/run/serve@v1.91.0
        with:
          port: ${{ env.NG_SERVER_PORT }}
          directory: ${{ env.DIST }}
          replaceBaseUrl: false

      - name: Run screenshot tests on ${{ env.DIST }}
        run: npx nx e2e demo-playwright -- --update-snapshots --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - uses: taiga-family/ci/actions/run/clone@v1.91.0
        with:
          branch: snapshots/demo/next/${{ github.base_ref }}
          destination: ${{ env.DIST_NEXT }}

      - uses: taiga-family/ci/actions/run/serve@v1.91.0
        with:
          port: ${{ env.NG_SERVER_PORT }}
          directory: ${{ env.DIST_NEXT }}
          replaceBaseUrl: false

      - name: Run screenshot tests on ${{ env.DIST_NEXT }}
        continue-on-error: true
        run: npx nx e2e demo-playwright --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Combine images to get diff reports
        run: |
          npm install canvas
          npx ts-node ./scripts/visual-testing/combine-playwright-failed-screenshots.ts

      - name: Debug output
        continue-on-error: true
        run: tree ${{ env.PLAYWRIGHT_SNAPSHOTS_PATH }}

      - name: Upload artifacts / ${{ env.PLAYWRIGHT_SNAPSHOTS_ARTIFACTS_KEY }}
        uses: actions/upload-artifact@v4.4.0
        with:
          path: |
            ./projects/demo-playwright/tests-results/**/*.diff.png
            !./projects/demo-playwright/tests-results/**/*-retry*/*.diff.png
          name: '${{ env.PLAYWRIGHT_SNAPSHOTS_ARTIFACTS_KEY }}_${{ matrix.shardIndex }}'
          if-no-files-found: ignore
          compression-level: 0
          retention-days: 1

  # workaround for status checks -- check this one job instead of each individual E2E job in the matrix
  # see https://github.com/orgs/community/discussions/9141#discussioncomment-2296809
  playwright-composite-result:
    name: Playwright E2E Tests matrix result
    if: ${{ always() }}
    needs:
      - playwright
    runs-on: ubuntu-latest
    steps:
      - run: |
          result="${{ needs.playwright.result }}"
          # mark as successful even if skipped
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi

  result:
    if: ${{ !contains(github.head_ref , 'release/') }}
    name: E2E result
    needs: [playwright]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: taiga-family/ci/actions/setup/variables@v1.91.0

      - name: Download artifacts / ${{ env.PLAYWRIGHT_SNAPSHOTS_ARTIFACTS_KEY }}
        continue-on-error: true
        uses: actions/download-artifact@v4.1.8
        with:
          path: ./total/playwright
          pattern: ${{ env.PLAYWRIGHT_SNAPSHOTS_ARTIFACTS_KEY }}_*
          merge-multiple: true
      - run: ls -R ./total/playwright || echo "not found"

      - name: Check if diff-output exists
        id: diff_checker
        run: |
          echo "diff_exist=$(find ./total -regex '.*diff\.png$' | wc -l | sed -e 's/^[[:space:]]*//')" >> $GITHUB_OUTPUT

      - name: Fall with an error if diff-output exists
        if: ${{ steps.diff_checker.outputs.diff_exist != '0' }}
        run: |
          find ./total -regex '.*diff\.png$' -exec echo "{}" \;
          exit 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
